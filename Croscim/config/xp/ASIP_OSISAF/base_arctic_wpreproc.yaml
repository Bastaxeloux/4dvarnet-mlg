# @package _global_

paths:
    src: /dmidata/users/maxb

domain: ???

trainer:
  _target_: pytorch_lightning.Trainer
  inference_mode: False
  gradient_clip_val: 0.5
  accelerator: gpu
  #devices: 1
  #limit_train_batches:  1000.
  #limit_val_batches: 500.
  accumulate_grad_batches: 10
  #precision: 16
  logger: 
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ${hydra:runtime.output_dir}
    name: ${hydra:runtime.choices.xp}
    version: ''
  max_epochs: 1000
  callbacks:
    #- _target_: src.versioning_cb.VersioningCallback
    - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: val_mse #train_mse
      save_top_k: 3
      filename: '{val_mse:.5f}-{epoch:03d}' #'{val_mse:.5f}-{epoch:03d}'

datamodule:
  _target_: contrib.DMI.ASIP_OSISAF.data_simple.BaseDataModule
  asip_paths: /dmidata/users/maxb/ASIP_OSISAF_dataset/PREPROC/asip_database_daw15_sparse.nc
  split_train: {_target_: builtins.slice, _args_: [0, 200]}
  split_val: {_target_: builtins.slice, _args_: [0, 250]}
  split_test: {_target_: builtins.slice, _args_: [0, 300]}
  da: True
  norm_stats:
    - 0
    - 100
  norm_stats_covs:
    - {'t2m': 270.08, 'istl1': 267.68, 'siconc': 0, 'sst': 276.97, 'skt': 270.50}
    - {'t2m': 14.67, 'istl1': 7.80, 'siconc': 1, 'sst': 6.82, 'skt': 15.21}

model:
  _target_: contrib.DMI.ASIP_OSISAF.models.Lit4dVarNet_ASIP_OSISAF
  persist_rw: False
  opt_fn:
    _target_: src.utils.cosanneal_lr_adam
    _partial_: true
    lr: 1e-3
    T_max: ${trainer.max_epochs}
  rec_weight:
      _target_: src.utils.get_last_time_wei
      patch_dims: {time: 15, yc: 240, xc: 240}
      crop: {time: 0, yc: 20, xc: 20}
      offset: 1
      dim_order:
        - "time"
        - "yc"
        - "xc"
  optim_weight:
      _target_: src.utils.get_linear_time_wei
      patch_dims: {time: 15, yc: 240, xc: 240}
      crop: {time: 0, yc: 20, xc: 20}
      offset: 1
      dim_order:
        - "time"
        - "yc"
        - "xc"
  sr_weight:
      _target_: src.utils.get_uniform_time_wei
      patch_dims: {time: 15, yc: 240, xc: 240}
      crop: {time: 0, yc: 20, xc: 20}
      offset: 1
      dim_order:
        - "time"
        - "yc"
        - "xc"
  solver: 
    _target_: contrib.DMI.ASIP_OSISAF.solver.GradSolver
    n_step: 15
    lr_grad: 1e3
    # lr_grad: 0.2
    use_cov: True
    prior_cost: 
      _target_: contrib.DMI.ASIP_OSISAF.solver.SRNNPriorCost
      srnn:
        _target_: contrib.DMI.ASIP_OSISAF.UNet.UNet
        in_channels: 75
        num_classes: ${model.optim_weight.patch_dims.time}
    obs_cost: 
      _target_: src.models.BaseObsCost
    grad_mod: 
      _target_: src.models.ConvLstmGradModel
      dim_in: ${model.optim_weight.patch_dims.time}
      dim_hidden: 96
  test_metrics: ${metrics.test_metrics}
  pre_metric_fn: 
        _target_: xarray.Dataset.sel
        _partial_: True
        time: {_target_: builtins.slice, _args_: ["2023-01-01", "2023-12-31"]}
        yc: ${domain.test.yc}
        xc: ${domain.test.xc}
  domain_limits: ${domain.train}

metrics:
  nrmse_scores: {_target_: src.utils.rmse_based_scores_from_ds, _partial_: True}
  psd_scores: {_target_: src.utils.psd_based_scores_from_ds, _partial_: True}
  get0: {_target_: operator.itemgetter, _args_: [0]}
  get1: {_target_: operator.itemgetter, _args_: [1]}
  test_metrics:
    'mu': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get0}']}
    'sig': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get1}']}
    'lx': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get0}']}
    'lt': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get1}']}

entrypoints:
  #- _target_: pytorch_lightning.seed_everything
  #  seed: 333
  - _target_: src.train.base_training
    trainer: ${trainer}
    lit_mod: ${model}
    dm: ${datamodule}
    save_dir: /dmidata/users/maxb/results
    test: false

defaults:
  - /domain: arctic_small
  - _self_

